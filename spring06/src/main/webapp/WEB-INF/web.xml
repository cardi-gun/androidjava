<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
<!-- 2-1) ContextLoarderListener => 컨트롤러가 공유하는 Bean들을 포함하는 파일을 생성한다. -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
<!-- 2-2) value로 지정된 url에 있는 context연결 설정 변경 -->
		<param-value>classpath:context.xml</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
<!-- 2-3)리스너 생성 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
<!-- 1-1) DispatcherServlet => 컨트롤러의 라이프 사이클을 관리하는 스프링 컨트롤러를 생성한다.  -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!-- 1-2) 파라메터로 받아오는 servlet-context파일에 대한 주소를 참조 받아 
contextLoader가 해당 파일을 dispatcher servlet으로 만든다. -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
<!-- 1-3) Dispatcher servlet이 언제 만들어 질지에 대한 생성 시기 결정 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
<!-- 1-4) url의 위치를 받아 생성 위치를 결정 -->
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>
